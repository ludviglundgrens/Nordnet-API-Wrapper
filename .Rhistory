z = 1
for(i in seq(0,100)){
a = (-(z^2))^i
s = s+a
v = append(v, s)
}
mean(v)
s = 0
v = c()
z = 10
for(i in seq(0,100)){
a = (-(z^2))^i
s = s+a
v = append(v, s)
}
s = 0
v = c()
z = 10
for(i in seq(0,100)){
a = (-(z^2))^i
s = s+a
v = append(v, s)
}
mean(v)
s = 0
v = c()
z = 0.1
for(i in seq(0,100)){
a = (-(z^2))^i
s = s+a
v = append(v, s)
}
mean(v)
1/(1+0.1^2)
getwd()
tickers <- read.csv("tickers.csv")
setwd("/Users/ludviglundgren/Desktop/API_wrapper")
tickers <- read.csv("tickers.csv")
tickers
head(tickers)
tickers <- read.csv("tickers.csv", sep = ";")
head(tickers)
tickers <- read.csv("tickers.csv", sep = ";", header = T)
head(tickers)
tickers <- read.csv("tickers.csv", sep = ";", header = F)
head(tickers)
colnames(tickers) <- c("id", "name", "short_name", "ISIN")
head(tickers)
read.table(paste0(base_url, period, identifier)
)
base_url = "https://api.prod.nntech.io/market-data/price-time-series/v2/"
period <- "period/DAY_1/"
identifier <- "identifier/16298979"
read.table(paste0(base_url, period, identifier))
library(httr)
req <- GET(paste0(base_url, period, identifier))
set_config(config(ssl_verifypeer = 0L))
req <- GET(paste0(base_url, period, identifier))
req
req$content
http_status(req)
http_status(req)$category == "Success"
warn_for_status(req)
content(req, "json")
content(req, "raw")
content(req, "text")
c <- content(req, "text")
c
c <- content(req, "parsed")
c
unlist(c)
unlist(c)[1]
c[[1]]
c[1]
c
c$timeSeriesIdentifier
c$pricePoints
c$pricePoints[[1]]
sapply(c, [[1]$timeStamp])
sapply(c, [)
sapply(c, "[")
sapply(c, "[[")
f <- function(dat){dat[[1]]$timeStamp}
sapply(c, f)
f <- function(dat){dat[[1]]}
sapply(c, f)
f <- function(dat){dat$timeStamp}
sapply(c, f)
sapply(c, "[")
c
lapply(c, f)
lapply(c, "[")
lapply(c, "[[")
c[[1]]
c[[2]]
lapply(c[[2]], f)
f
lapply(c[[2]])
lapply(c[[2]], "[")
f <- function(dat){data.frame(dat$timeStamp, dat$high)}
lapply(c[[2]], f)
df <- lapply(c[[2]], f)
unlist(df)
f <- function(dat){data.frame(dat$timeStamp, dat$high)}
d
f
f <- function(dat){return(dat$timeStamp, dat$high)}
lapply(data, f)
data <- c$pricePoints[[2]]
lapply(data, f)
data
data <- c[[2]]
lapply(data, f)
data
f <- function(dat){return(dat$timeStamp, dat$high)}
lapply(data, f)
f <- function(dat){c(dat$timeStamp, dat$high)}
lapply(data, f)
df <- lapply(data, f)
unlist(df)
df <- lapply(data, f)
df
f <- function(dat){c(dat$timeStamp, dat$high, dat$low, dat$open, dat$last, dat$volume)}
df <- lapply(data, f)
df
unlist(df)
df
f <- function(dat){data.frame(dat$timeStamp, dat$high, dat$low, dat$open, dat$last, dat$volume)}
f
df <- lapply(data, f)
df
rbind(df)
rbind(unlist(df))
df
lapply(df, "[[")
lapply(df, "[")
rbind.data.frame(unlist(df))
rbind.data.frame(df)
cbind(unlist(df))
library(dplyr)
dplyr::spread(df)
library(tidyr)
spread(df)
df <- cbind(unlist(df))
f
df
data.frame(df)
spread(data.frame(df))
data.frame(df)
df <- spread(data.frame(df))
df <- cbind(unlist(df))
class(df)
as.data.frame(df)
df <- as.data.frame(df)
head(df)
rownames(df)
rownames(df)
df$col <- rownames(df)
rownames(df) <- NULL
df
df
spread(df)
?spread
pivot_wider(df)
pivot_wider(df, id_cols = c("dat.high"))
pivot_wider(df, id_cols = c("dat.high.67"))
pivot_wider(df, id_cols = dat.high.67)
pivot_wider(df, key = dat.high.67)
pivot_wider(df, key = "dat.high.67")
pivot_wider(df, key = 1)
pivot_wider(df, names_from =  = "dat.high")
pivot_wider(df, names_from = "dat.high")
df$col
pivot_wider(df, names_from = col)
pivot_wider(df, names_from = "col")
spread(df, )data
data
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
row <- c(data[[i]]$timeStamp, data[[i]]$open)
df <- rbind(df, row)
}
df
df <- data.frame()
for(i in 1:length(data)){
row <- c(data[[i]]$timeStamp, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
colnames(df) <- c("time", "open", "last", "high", "low", "volume")
df
df$time[1:2]
df$time[1]-df$time[2]
df$time[1:2]
df$time[1]-df$time[2]
/(24*60)
(df$time[1]-df$time[2])/(24*60)
(df$time[1]-df$time[2])/(24*60*60)
(df$time[1]-df$time[2])/(60)
(df$time[1]-df$time[2])/(60*60)
(df$time[1]-df$time[2])/(24*60)
(df$time[1]-df$time[2])/(60)
df$time/60000
df$time
df$time[1]
as.numeric(df$time[1])
as.chraracter(df$time[1])
as.character(df$time[1])
as.character(df$time[2])
as.Date("2020-01-01")
as.numeric(as.Date("2020-01-01"))
as.POSIXct(df$time[1])
as.POSIXct(df$time[1], origin = "1970-01-01")
as.POSIXct(df$time[1], origin = "0-01-01")
as.POSIXct(df$time[1]/1000, origin = "1970-01-01")
df <- data.frame()
for(i in 1:length(data)){
row <- c(
as.POSIXct(data[[i]]$timeStamp/1000, origin("1970-01-01")),
data[[i]]$open,
data[[i]]$last,
data[[i]]$high,
data[[i]]$low,
data[[i]]$volume)
df <- rbind(df, row)
}
df <- data.frame()
for(i in 1:length(data)){
row <- c(
as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01"),
data[[i]]$open,
data[[i]]$last,
data[[i]]$high,
data[[i]]$low,
data[[i]]$volume)
df <- rbind(df, row)
}
colnames(df) <- c("time", "open", "last", "high", "low", "volume")
df$head
df
head(df)
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
row <- c(
as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01"),
data[[i]]$open,
data[[i]]$last,
data[[i]]$high,
data[[i]]$low,
data[[i]]$volume)
df <- rbind(df, row)
}
head(df)
data[[1]]$timeStamp
as.POSIXct(data[[1]]$timeStamp/1000, origin = "1970-01-01")
df <- data.frame()
for(i in 1:length(data)){
date <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
row <- c(date, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
df
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
date <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
row <- c(date, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
df
df <- data.frame()
for(i in 1:length(data)){
date <- as.Date(as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01"))
row <- c(date, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
head(df)
as.POSIXct(data[[1]]$timeStamp/1000, origin = "1970-01-01")
as.POSIXct(data[[1:10]]$timeStamp/1000, origin = "1970-01-01")
as.Date(as.POSIXct(data[[1:10]]$timeStamp/1000, origin = "1970-01-01"))
as.Date(as.POSIXct(data[[1]]$timeStamp/1000, origin = "1970-01-01"))
date <- as.Date(datetime)
datetime <- as.POSIXct(data[[1]]$timeStamp/1000, origin = "1970-01-01")
datetime
?split
strsplit(datatime, " ")
strsplit(datetime, " ")
strsplit(datetime, split = " ")
strsplit(datetime, fixed =  = " ")
?strsplit
datetime
strsplit(datetime, " ")
strsplit(datetime, "\t")
strsplit(datetime, "1")
strsplit(as.character(datetime), " ")
strsplit(as.character(datetime), " ")[[1]][2]
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
date
time
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(as.Date(date), data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
df
date
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(date, time, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
df
df$X.2022.05.16.
length(df)
c
setwd("/Users/ludviglundgren/Desktop/API_wrapper")
base_url = "https://api.prod.nntech.io/market-data/price-time-series/v2/"
period <- "period/YEAR_1/"
identifier <- "identifier/16290321"
tickers <- read.csv("tickers.csv", sep = ";", header = F)
colnames(tickers) <- c("id", "name", "short_name", "ISIN")
library(httr)
set_config(config(ssl_verifypeer = 0L))
req <- GET(paste0(base_url, period, identifier))
warn_for_status(r)
print(ifelse(http_status(req)$category == "Success", "Request worked", "Request failed"))
c <- content(req, "parsed")
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(date, time, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
df
colnames(df) <- c("time", "open", "last", "high", "low", "volume")
head(df)
colnames(df) <- c("date", "time", "open", "last", "high", "low", "volume")
df
arrange(df, date)
length(df$date)
base_url = "https://api.prod.nntech.io/market-data/price-time-series/v2/"
period <- "period/YEAR_1/"
identifier <- "identifier/16290321?resolution=HOUR_1"
tickers <- read.csv("tickers.csv", sep = ";", header = F)
colnames(tickers) <- c("id", "name", "short_name", "ISIN")
library(httr)
set_config(config(ssl_verifypeer = 0L))
req <- GET(paste0(base_url, period, identifier))
print(ifelse(http_status(req)$category == "Success", "Request worked", "Request failed"))
c <- content(req, "parsed")
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(date, time, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
colnames(df) <- c("date", "time", "open", "last", "high", "low", "volume")
df
tickers
nnid = 16290321
tickers[tickers$id == nnid]
tickers[tickers$id == nnid,]
tickers[tickers$short_name == "KAMBI",]
tickers[tickers$short_name == "KAMBI",3]
tickers[tickers$short_name == "KAMBI",1]
fetch_hist <- function(short_name = "KAMBI", period = "YEAR_1", res="HOUR_1"){
tickers <- read.csv("tickers.csv", sep = ";", header = F)
colnames(tickers) <- c("id", "name", "short_name", "ISIN")
id <- tickers[tickers$short_name == short_name,1]
setwd("/Users/ludviglundgren/Desktop/API_wrapper")
base_url = "https://api.prod.nntech.io/market-data/price-time-series/v2/"
period <- paste0("period/", period,"/")
identifier <- paste0("identifier/", id)
resolution = paste0("?resolution=",res)
httr::set_config(config(ssl_verifypeer = 0L))
req <- httr::GET(paste0(base_url, period, identifier, resolution))
print(ifelse(http_status(req)$category == "Success", "Request worked", "Request failed"))
c <- content(req, "parsed")
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(date, time, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
colnames(df) <- c("date", "time", "open", "last", "high", "low", "volume")
return(df)
}
fetch_hist()
df < -fetch_hist()
df <- fetch_hist()
df
head(df)
getwd()
fetch_hist <- function(short_name = "KAMBI", period = "YEAR_1", res="HOUR_1"){
tickers <- read.csv("tickers.csv", sep = ";", header = F)
colnames(tickers) <- c("id", "name", "short_name", "ISIN")
id <- tickers[tickers$short_name == short_name,1]
#setwd("/Users/ludviglundgren/Desktop/API_wrapper")
base_url = "https://api.prod.nntech.io/market-data/price-time-series/v2/"
period <- paste0("period/", period,"/")
identifier <- paste0("identifier/", id)
resolution = paste0("?resolution=",res)
httr::set_config(config(ssl_verifypeer = 0L))
req <- httr::GET(paste0(base_url, period, identifier, resolution))
print(ifelse(http_status(req)$category == "Success", "Request worked", "Request failed"))
c <- content(req, "parsed")
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(date, time, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
colnames(df) <- c("date", "time", "open", "last", "high", "low", "volume")
return(df)
}
fetch_hist("KAMBI")
fetch_hist <- function(short_name = "KAMBI", period = "YEAR_1", res="HOUR_1"){
tickers <- read.csv("tickers.csv", sep = ";", header = F)
colnames(tickers) <- c("id", "name", "short_name", "ISIN")
id <- tickers[tickers$short_name == short_name,1]
#setwd("/Users/ludviglundgren/Desktop/API_wrapper")
base_url = "https://api.prod.nntech.io/market-data/price-time-series/v2/"
period <- paste0("period/", period,"/")
identifier <- paste0("identifier/", id)
resolution = paste0("?resolution=",res)
httr::set_config(httr::config(ssl_verifypeer = 0L))
req <- httr::GET(paste0(base_url, period, identifier, resolution))
print(ifelse(http_status(req)$category == "Success", "Request worked", "Request failed"))
c <- content(req, "parsed")
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(date, time, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
colnames(df) <- c("date", "time", "open", "last", "high", "low", "volume")
return(df)
}
fetch_hist("KAMBI")
fetch_hist <- function(short_name = "KAMBI", period = "YEAR_1", res="HOUR_1"){
tickers <- read.csv("tickers.csv", sep = ";", header = F)
colnames(tickers) <- c("id", "name", "short_name", "ISIN")
id <- tickers[tickers$short_name == short_name,1]
base_url = "https://api.prod.nntech.io/market-data/price-time-series/v2/"
period <- paste0("period/", period,"/")
identifier <- paste0("identifier/", id)
resolution = paste0("?resolution=",res)
httr::set_config(httr::config(ssl_verifypeer = 0L))
req <- httr::GET(paste0(base_url, period, identifier, resolution))
#print(ifelse(http_status(req)$category == "Success", "Request worked", "Request failed"))
c <- content(req, "parsed")
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(date, time, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
colnames(df) <- c("date", "time", "open", "last", "high", "low", "volume")
return(df)
}
fetch_hist("KAMBI")
fetch_hist <- function(short_name = "KAMBI", period = "YEAR_1", res="HOUR_1"){
tickers <- read.csv("tickers.csv", sep = ";", header = F)
colnames(tickers) <- c("id", "name", "short_name", "ISIN")
id <- tickers[tickers$short_name == short_name,1]
base_url = "https://api.prod.nntech.io/market-data/price-time-series/v2/"
period <- paste0("period/", period,"/")
identifier <- paste0("identifier/", id)
resolution = paste0("?resolution=",res)
httr::set_config(httr::config(ssl_verifypeer = 0L))
req <- httr::GET(paste0(base_url, period, identifier, resolution))
#print(ifelse(http_status(req)$category == "Success", "Request worked", "Request failed"))
c <- httr::content(req, "parsed")
data <- c[[2]]
df <- data.frame()
for(i in 1:length(data)){
datetime <- as.POSIXct(data[[i]]$timeStamp/1000, origin = "1970-01-01")
date <- strsplit(as.character(datetime), " ")[[1]][1]
time <- strsplit(as.character(datetime), " ")[[1]][2]
row <- c(date, time, data[[i]]$open, data[[i]]$last, data[[i]]$high, data[[i]]$low, data[[i]]$volume)
df <- rbind(df, row)
}
colnames(df) <- c("date", "time", "open", "last", "high", "low", "volume")
return(df)
}
fetch_hist()
